.TH "<assert.h>: Diagnostics" 3 "6 Nov 2008" "Version 1.6.4" "avr-libc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
<assert.h>: Diagnostics \- 
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBassert\fP(expression)"
.br
.in -1c
.SH "Detailed Description"
.PP 
.PP
.nf
 #include <assert.h> 
.fi
.PP
.PP
This header file defines a debugging aid.
.PP
As there is no standard error output stream available for many applications using this library, the generation of a printable error message is not enabled by default. These messages will only be generated if the application defines the macro
.PP
.PP
.nf
 __ASSERT_USE_STDERR 
.fi
.PP
.PP
before including the \fC<\fBassert.h\fP>\fP header file. By default, only \fBabort()\fP will be called to halt the application. 
.SH "Define Documentation"
.PP 
.SS "#define assert(expression)"
.PP
\fBParameters:\fP
.RS 4
\fIexpression\fP Expression to test for.
.RE
.PP
The \fBassert()\fP macro tests the given expression and if it is false, the calling process is terminated. A diagnostic message is written to stderr and the function \fBabort()\fP is called, effectively terminating the program.
.PP
If expression is true, the \fBassert()\fP macro does nothing.
.PP
The \fBassert()\fP macro may be removed at compile time by defining NDEBUG as a macro (e.g., by using the compiler option -DNDEBUG). 
.SH "Author"
.PP 
Generated automatically by Doxygen for avr-libc from the source code.
